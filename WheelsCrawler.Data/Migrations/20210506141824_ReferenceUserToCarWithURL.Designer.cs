// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WheelsCrawler.Data.Models;

namespace WheelsCrawler.Data.Migrations
{
    [DbContext(typeof(WheelsCrawlerDbContext))]
    [Migration("20210506141824_ReferenceUserToCarWithURL")]
    partial class ReferenceUserToCarWithURL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("WheelsCrawler.Data.Models.Account.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarBrandId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarFuelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarGearboxId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("EngineСapacity")
                        .HasColumnType("REAL");

                    b.Property<int>("Kilometrage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Plate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RelatedQueryUrlId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId");

                    b.HasIndex("CarFuelId");

                    b.HasIndex("CarGearboxId");

                    b.HasIndex("CarModelId");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("RelatedQueryUrlId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.CarBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiaName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("WheelsName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarBrands");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.CarFuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiaName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("WheelsName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarFuels");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.CarGearbox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiaName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("WheelsName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarGearboxes");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarBrandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiaName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("WheelsName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiaName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("WheelsName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarTypes");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.Url", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UrlToScrape")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Urls");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.Car", b =>
                {
                    b.HasOne("WheelsCrawler.Data.Models.CarBrand", "CarBrand")
                        .WithMany()
                        .HasForeignKey("CarBrandId");

                    b.HasOne("WheelsCrawler.Data.Models.CarFuel", "CarFuel")
                        .WithMany()
                        .HasForeignKey("CarFuelId");

                    b.HasOne("WheelsCrawler.Data.Models.CarGearbox", "CarGearbox")
                        .WithMany()
                        .HasForeignKey("CarGearboxId");

                    b.HasOne("WheelsCrawler.Data.Models.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("CarModelId");

                    b.HasOne("WheelsCrawler.Data.Models.CarType", "CarType")
                        .WithMany("Cars")
                        .HasForeignKey("CarTypeId");

                    b.HasOne("WheelsCrawler.Data.Models.Url", "RelatedQueryUrl")
                        .WithMany()
                        .HasForeignKey("RelatedQueryUrlId");

                    b.Navigation("CarBrand");

                    b.Navigation("CarFuel");

                    b.Navigation("CarGearbox");

                    b.Navigation("CarModel");

                    b.Navigation("CarType");

                    b.Navigation("RelatedQueryUrl");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.CarModel", b =>
                {
                    b.HasOne("WheelsCrawler.Data.Models.CarBrand", "CarBrand")
                        .WithMany("CarModels")
                        .HasForeignKey("CarBrandId");

                    b.Navigation("CarBrand");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.Url", b =>
                {
                    b.HasOne("WheelsCrawler.Data.Models.Account.User", null)
                        .WithMany("InterestedUrls")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.Account.User", b =>
                {
                    b.Navigation("InterestedUrls");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.CarBrand", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("WheelsCrawler.Data.Models.CarType", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
